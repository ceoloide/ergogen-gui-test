# .github/workflows/deploy.yaml

name: Build and deploy on GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

  repository_dispatch:
  pull_request:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: yarn
      - name: Yarn install
        run: yarn install --frozen-lockfile
      - name: Yarn build
        run: yarn build
      - name: Create deployment artifact
        run: tar -czf artifact.tar.gz -C ./build .
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: artifact.tar.gz

  deploy:
    if: github.event_name != 'pull_request'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: github-pages
      - name: Create build directory
        run: mkdir ./build
      - name: Unpack deployment artifact
        run: tar -xzf artifact.tar.gz -C ./build
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
